{"version":3,"sources":["components/Filter/Filter.module.css","redux/slicers.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","initialState","contacts","JSON","parse","window","localStorage","getItem","initialContacts","filter","contactsSlice","createSlice","name","reducers","addContact","state","payload","deleteContact","contact","id","filterSlice","changeFilter","_","rootReducer","combineReducers","reducer","actions","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","className","s","form","onSubmit","e","preventDefault","find","toLowerCase","alert","uuidv4","lable","input","type","value","pattern","title","onChange","target","required","submitBtn","PropsType","PropTypes","func","isRequired","ContactList","includes","contactList","map","icon","buttonDelete","onClick","onDeleteClick","Filter","findFild","inputFind","App","useEffect","setItem","stringify","store","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.903b7c21.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"findFild\":\"Filter_findFild__2AYuJ\",\"inputFind\":\"Filter_inputFind__2ZLgw\"};","import { createSlice } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport initialContacts from '../data.json';\r\n\r\n\r\nconst initialState = {\r\n  contacts:\r\n    JSON.parse(window.localStorage.getItem('contacts')) ?? initialContacts,\r\n  filter: '',\r\n};\r\n\r\nconst contactsSlice=createSlice({\r\n  name:'contacts',\r\n  initialState:initialState.contacts,\r\n  reducers:{\r\n    addContact:(state, { payload }) => [payload, ...state],\r\n    deleteContact:(state, { payload }) =>\r\n        state.filter(contact => contact.id !== payload),\r\n  }\r\n});\r\n\r\n\r\n\r\nconst filterSlice=createSlice({\r\n  name:'filter',\r\n  initialState:initialState.filter,\r\n  reducers:{\r\n    changeFilter:(_, { payload }) => payload,\r\n  }\r\n});\r\n\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    contacts:contactsSlice.reducer,\r\n    filter:filterSlice.reducer,\r\n  });\r\n\r\n\r\nexport const { addContact, deleteContact } = contactsSlice.actions;\r\nexport const { changeFilter } = filterSlice.actions;\r\n  \r\nexport default rootReducer;","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { addContact } from '../../redux/slicers'\r\nimport s from './ContactForm.module.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const contacts = useSelector(state => state.contacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    \r\n    const findContact = contacts.find(\r\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n    );\r\n\r\n    if (findContact) {\r\n      alert(`${name} is already in contacts`);\r\n      return;\r\n    } else {\r\n      dispatch(addContact({ \r\n        id: uuidv4(),\r\n        name,\r\n        number,\r\n       }));\r\n      setName('');\r\n      setNumber('');\r\n    }\r\n    \r\n  };\r\n\r\n  return (\r\n    <form  className={s.form} onSubmit={handleSubmit}>\r\n      <label className={s.lable}>\r\n        Name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          onChange={e => setName(e.target.value)}\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <label className={s.lable}>\r\n        Number\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          onChange={e => setNumber(e.target.value)}\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <button type=\"submit\" className={s.submitBtn}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.PropsType = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n// import {connect} from 'react-redux';\r\nimport { MdContactPhone } from 'react-icons/md';\r\nimport {deleteContact} from '../../redux/slicers';\r\nimport s from './ContactList.module.css';\r\n\r\n export default function ContactList() {\r\n  const contacts=useSelector(({contacts,filter})=>contacts.filter(contact =>\r\n        contact.name.toLowerCase().includes(filter.toLowerCase())));\r\n  const dispatch=useDispatch();\r\n  const onDeleteClick=(id)=>dispatch(deleteContact(id));\r\n  \r\n  return (\r\n    <ul className={s.contactList}>\r\n      {contacts.map(({ id, name, number }) => {\r\n        return (\r\n          <li key={id} className={s.contact}>\r\n            <MdContactPhone className={s.icon} />\r\n            <p>\r\n              {name}: {number}\r\n            </p>\r\n            <button\r\n              className={s.buttonDelete}\r\n              type=\"button\"\r\n              onClick={()=>onDeleteClick(id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  onDeleteClick: PropTypes.func,\r\n};\r\n\r\n//  const mapStateToProps= ({contacts,filter})=>({\r\n//   contacts:contacts.filter(contact =>contact.name.toLowerCase().includes(filter.toLowerCase())),\r\n//  });\r\n//  const  mapDispatchToProps=dispatch=>({\r\n//   onDeleteClick:id=>dispatch(deleteContact(id))\r\n//  });\r\n\r\n//  export default connect(mapStateToProps,mapDispatchToProps)(ContactList);","import { useSelector, useDispatch } from 'react-redux';\r\n// import{connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { changeFilter } from '../../redux/slicers';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter() {\r\n  const value = useSelector(state => state.filter);\r\n  const dispatch = useDispatch();\r\n  \r\n\r\n  return (\r\n    <label className={s.findFild}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.inputFind}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={ e => dispatch(changeFilter(e.target.value))}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\n// const mapStateToProps=state=>({value:state.filter});\r\n// const mapDispatchToProps=dispatch=>({\r\n//   onChange:e=>dispatch(changeFilter(e.target.value)),\r\n// });\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Filter)\r\n","import { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n// import { v4 as uuidv4 } from 'uuid';\r\nimport ContactForm from './components/ContactForm/ContactForm';\r\nimport ContactList from './components/ContactList/ContactList';\r\nimport Filter from './components/Filter/Filter';\r\n// import initialContacts from './data.json';\r\n\r\n export default function App() {\r\n  const contacts=useSelector(state=>state.contacts)\r\n  useEffect(() => {\r\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm  />\r\n      <h2>Contacts </h2>\r\n      <Filter />\r\n      <ContactList/>\r\n    </div>\r\n  );\r\n};","import rootReducer from './slicers';\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst store = configureStore({\r\n    reducer:rootReducer,\r\n});\r\nexport default store;\r\n\r\n//// WITHOUT REDUX TOOLKIT\r\n// import { createStore } from \"redux\";\r\n// const store = createStore(rootReducer)\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './redux/store';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store ={store}> \r\n    <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__CjN8t\",\"lable\":\"ContactForm_lable__27pBp\",\"input\":\"ContactForm_input__1e-IL\",\"submitBtn\":\"ContactForm_submitBtn__1i5yB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactList_contact__eEbRS\",\"buttonDelete\":\"ContactList_buttonDelete__2H4XX\",\"icon\":\"ContactList_icon__11Pip\"};"],"sourceRoot":""}