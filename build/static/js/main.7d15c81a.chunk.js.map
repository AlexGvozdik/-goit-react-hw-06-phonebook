{"version":3,"sources":["components/Filter/Filter.module.css","redux/actions.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","redux/redusers.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","changeFilter","deleteContact","ContactForm","useState","setName","setNumber","contacts","useSelector","state","dispatch","useDispatch","className","s","form","onSubmit","e","preventDefault","find","contact","toLowerCase","alert","lable","input","type","value","pattern","title","onChange","target","required","submitBtn","PropsType","PropTypes","func","isRequired","ContactList","filter","includes","contactList","map","icon","buttonDelete","onClick","onDeleteClick","Filter","findFild","inputFind","App","useEffect","window","localStorage","setItem","JSON","stringify","initialState","parse","getItem","initialContacts","createReducer","_","rootReducer","combineReducers","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d15c81a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"findFild\":\"Filter_findFild__14kE1\",\"inputFind\":\"Filter_inputFind__20tWw\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nexport const addContact = createAction('contact/add', ({ name, number }) => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nexport const changeFilter= createAction('contact/filter');\r\nexport const deleteContact = createAction('contact/delete');\r\n\r\n// export const addContact=({name,number})=>({\r\n//   type:'contact/add',\r\n// payload: {\r\n//   id: uuidv4(),\r\n//   name,\r\n//   number,\r\n// },\r\n// });\r\n// export const changeFilter = value => ({\r\n//   type: 'contact/filter',\r\n//   payload: value,\r\n// });\r\n\r\n// export const deleteContact = id => ({\r\n//   type: 'contact/delete',\r\n//   payload: id,\r\n// });\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { addContact } from '../../redux/actions';\r\nimport s from './ContactForm.module.css';\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const contacts = useSelector(state => state.contacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    \r\n    const findContact = contacts.find(\r\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n    );\r\n\r\n    if (findContact) {\r\n      alert(`${name} is already in contacts`);\r\n      return;\r\n    } else {\r\n      dispatch(addContact({ name, number }));\r\n      setName('');\r\n      setNumber('');\r\n    }\r\n    \r\n  };\r\n\r\n  return (\r\n    <form  className={s.form} onSubmit={handleSubmit}>\r\n      <label className={s.lable}>\r\n        Name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          onChange={e => setName(e.target.value)}\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <label className={s.lable}>\r\n        Number\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          onChange={e => setNumber(e.target.value)}\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <button type=\"submit\" className={s.submitBtn}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.PropsType = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n// import {connect} from 'react-redux';\r\nimport { MdContactPhone } from 'react-icons/md';\r\nimport {deleteContact} from '../../redux/actions';\r\nimport s from './ContactList.module.css';\r\n\r\n export default function ContactList() {\r\n  const contacts=useSelector(({contacts,filter})=>contacts.filter(contact =>\r\n        contact.name.toLowerCase().includes(filter.toLowerCase())));\r\n  const dispatch=useDispatch();\r\n  const onDeleteClick=(id)=>dispatch(deleteContact(id));\r\n  \r\n  return (\r\n    <ul className={s.contactList}>\r\n      {contacts.map(({ id, name, number }) => {\r\n        return (\r\n          <li key={id} className={s.contact}>\r\n            <MdContactPhone className={s.icon} />\r\n            <p>\r\n              {name}: {number}\r\n            </p>\r\n            <button\r\n              className={s.buttonDelete}\r\n              type=\"button\"\r\n              onClick={()=>onDeleteClick(id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  onDeleteClick: PropTypes.func,\r\n};\r\n\r\n//  const mapStateToProps= ({contacts,filter})=>({\r\n//   contacts:contacts.filter(contact =>contact.name.toLowerCase().includes(filter.toLowerCase())),\r\n//  });\r\n//  const  mapDispatchToProps=dispatch=>({\r\n//   onDeleteClick:id=>dispatch(deleteContact(id))\r\n//  });\r\n\r\n//  export default connect(mapStateToProps,mapDispatchToProps)(ContactList);","import { useSelector, useDispatch } from 'react-redux';\r\n// import{connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { changeFilter } from '../../redux/actions';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter() {\r\n  const value = useSelector(state => state.filter);\r\n  const dispatch = useDispatch();\r\n  const onChange = e => dispatch(changeFilter(e.target.value));\r\n\r\n  return (\r\n    <label className={s.findFild}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.inputFind}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\n// const mapStateToProps=state=>({value:state.filter});\r\n// const mapDispatchToProps=dispatch=>({\r\n//   onChange:e=>dispatch(changeFilter(e.target.value)),\r\n// });\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Filter)\r\n","import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n// import { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n// import initialContacts from './data.json';\n\n export default function App() {\n  const contacts=useSelector(state=>state.contacts)\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm  />\n      <h2>Contacts </h2>\n      <Filter />\n      <ContactList/>\n    </div>\n  );\n};","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport initialContacts from '../data.json';\r\nimport { addContact,  changeFilter, deleteContact } from './actions';\r\n\r\nconst initialState = {\r\n  contacts:\r\n    JSON.parse(window.localStorage.getItem('contacts')) ?? initialContacts,\r\n  filter: '',\r\n};\r\n\r\n\r\nconst contacts = createReducer(initialState.contacts, {\r\n  [addContact]: (state, { payload }) => [payload, ...state],\r\n\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n});\r\n\r\nconst filter = createReducer(initialState.filter, {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts,\r\n  filter,\r\n});\r\nexport default rootReducer;\r\n\r\n///WITHOUT REDUX TOOLKIT\r\n// import actionTypes from './types';\r\n\r\n// const contacts=(initialState.contacts, {type, payload}) => {\r\n//   switch(type) {\r\n// case actionTypes.ADD:\r\n//   return [...state, payload];\r\n\r\n//     case actionTypes.DELETE:\r\n//   return state.filter(contact => contact.id !== payload);\r\n\r\n//     default:\r\n//     return state;\r\n\r\n//   }\r\n\r\n// }\r\n\r\n// const filter = (initialState.filter, {type, payload}) => {\r\n//     switch (type) {\r\n//       case actionTypes.FILTER:\r\n//         return payload;\r\n\r\n//       default:\r\n//         return state;\r\n//     }\r\n// };\r\n","import rootReducer from './redusers';\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst store = configureStore({\r\n    reducer:rootReducer,\r\n});\r\nexport default store;\r\n\r\n//// WITHOUT REDUX TOOLKIT\r\n// import { createStore } from \"redux\";\r\n// const store = createStore(rootReducer)\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store ={store}> \n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1kksJ\",\"lable\":\"ContactForm_lable__SAoAz\",\"input\":\"ContactForm_input__10k9a\",\"submitBtn\":\"ContactForm_submitBtn__3ZZ75\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactList_contact__34nl0\",\"buttonDelete\":\"ContactList_buttonDelete__2Mp4y\",\"icon\":\"ContactList_icon__12-u3\"};"],"sourceRoot":""}